user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
  # this section needs to be present, but can be empty
}

http {
  # performance: sendfile and tcp_nopush to on
  sendfile on;
  tcp_nopush on;

  types_hash_max_size 2048; # default is 1024
  server_tokens off; # minimal server information

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  gzip on;
  gzip_vary on;
  gzip_comp_level  6;
  gzip_min_length  1100;
  gzip_types    text/css text/javascript text/xml text/plain text/x-component application/javascript application/x-javascript application/json application/xml application/rss+xml font/truetype application/x-font-ttf font/opentype application/vnd.ms-fontobject image/svg+xml;

  log_format main '$http_x_real_ip - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
    '$http_x_forwarded_proto "$http_x_ssl_client_verify" "$http_x_ssl_client_serial" '
    '$upstream_header_time ';

  access_log /var/log/nginx/access.log main;
  error_log /var/log/nginx/error.log warn;

  include /etc/nginx/conf.d/*.conf;

  server {
    # the port your site will be served on
    listen      5000 default_server;
    charset     utf-8;

    client_max_body_size 150M;   # wanted max upload size

    location = /robots.txt {
      alias /app/ecs/static/robots.txt;
    }

    location = /favicon.ico {
      alias /app/ecs/static/favicon.ico;
    }

    # Django project's static files
    location /static {
      root /app/ecs;
    }

    # Last, send all non-static requests to the Django server
    location / {
      uwsgi_pass  django;
      uwsgi_read_timeout 300s;
      include /etc/nginx/uwsgi_params;

      # we trust and expect the frontend webserver to reset the following headers:
      # X-Real-IP, X-Forwarded-For, X-Forwarded-Proto, X-Ssl-Client-Verify, X-Ssl-Client-Serial

      # $host= from the request line, or the “Host” request header, or the server name matching a request
      uwsgi_param Host $host;
      # rewrite REMOTE_ADDR to use the value of X-Real-IP set from the frontend server
      uwsgi_param REMOTE_ADDR $http_x_real_ip;
      uwsgi_param X-Real-IP $http_x_real_ip;
      uwsgi_param X-Forwarded-For $http_x_forwarded_for;
      uwsgi_param X-Forwarded-Proto $http_x_forwarded_proto;
      uwsgi_param X-Ssl-Client-Verify $http_x_ssl_client_verify;
      uwsgi_param X-Ssl-Client-Serial $http_x_ssl_client_serial;
    }
  }

  # the upstream component nginx needs to connect to
  upstream django {
    server 127.0.0.1:8000;
  }

}
